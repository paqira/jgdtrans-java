name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v4
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      # Google Java Formatter does not support `@snippet`.
      # Hence, check before patch code snippets.
      #
      # See issues/886
      - name: Check
        run: gradle check
      - name: Patch (@snippet)
        run: |
          find lib/src/main/java -type f | xargs sed -i -e 's/<pre>{@code/{@snippet lang="java" :/'
          find lib/src/main/java -type f | xargs sed -i -e 's/<\/pre>//'
      - name: Build jar, javadocJar sourcesJar and javadoc
        run: gradle assemble
      - name: Test
        run: gradle test
      # Upload html etc.
      - name: Make .nojekyll
        if: startsWith(github.event.ref, 'refs/tags/v')
        run: touch lib/build/docs/javadoc/.nojekyll
      - uses: actions/upload-pages-artifact@v3
        if: startsWith(github.event.ref, 'refs/tags/v')
        with:
          path: lib/build/docs/javadoc/
  java8:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v4
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: gradle
      - name: Patch (support Java8)
        run: |
          sed -i -e 's/JavaLanguageVersion.of(\d{1,2})/JavaLanguageVersion.of(8)/' lib/build.gradle.kts
          cat lib/build.gradle.kts
      # `prefer` does not work on `plugin`,
      # thus we patch `libs.versions.toml`.
      #
      # See issues/27208
      - name: Patch (issues/27208)
        run: |
          sed -i -e 's/\[6.13.0, 7.0.0\[/6.13.0/' gradle/libs.versions.toml
          sed -i -e 's/latest.release/6.13.0/' gradle/libs.versions.toml
          cat gradle/libs.versions.toml
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build jar
        run: gradle jar
      - name: Test
        run: gradle test
      # upload builds
      - name: gradle publish
        if: startsWith(github.event.ref, 'refs/tags/v')
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_SECRET_KEY_PASSWORD }}
        run: gradle publish
      - name: zip
        if: startsWith(github.event.ref, 'refs/tags/v')
        run: |
          cd lib/build/staging-deploy/
          zip -r jgdtrans-${{ github.ref_name }}.zip .
      - name: Upload
        uses: actions/upload-artifact@v4
        if: startsWith(github.event.ref, 'refs/tags/v')
        with:
          name: artifact
          path: |
            lib/build/staging-deploy/jgdtrans-${{ github.ref_name }}.zip
            lib/build/staging-deploy/**/*.jar
  deploy-github-pages:
    needs: build
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment